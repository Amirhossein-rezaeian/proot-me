/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: rootlesscontainers.proto */

#ifndef PROTOBUF_C_rootlesscontainers_2eproto__INCLUDED
#define PROTOBUF_C_rootlesscontainers_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Rootlesscontainers__Resource Rootlesscontainers__Resource;


/* --- enums --- */


/* --- messages --- */

/*
 * Resource defines the schema for "user.rootlesscontainers" xattr values.
 * The resource can be used as a persistent storage for emulated `chown(2)` syscall.
 * Syscall emulators SHOULD try to hide this xattr from the emulated environment.
 */
struct  _Rootlesscontainers__Resource
{
  ProtobufCMessage base;
  /*
   * Zero-value MUST be parsed as a literally zero-value, not "unset".
   * To keep both uid and gid unchaged, the entire xattr value SHOULD be removed.
   * To keep either one of uid or gid unchaged, 0xFFFFFFFF (in other words,
   * `(uint32_t) -1`, see also chown(2)) value SHOULD be set.
   * (Because some protobuf bindings cannot distinguish "unset" from zero-value.)
   */
  protobuf_c_boolean has_uid;
  uint32_t uid;
  protobuf_c_boolean has_gid;
  uint32_t gid;
};
#define ROOTLESSCONTAINERS__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rootlesscontainers__resource__descriptor) \
    , 0,0, 0,0 }


/* Rootlesscontainers__Resource methods */
void   rootlesscontainers__resource__init
                     (Rootlesscontainers__Resource         *message);
size_t rootlesscontainers__resource__get_packed_size
                     (const Rootlesscontainers__Resource   *message);
size_t rootlesscontainers__resource__pack
                     (const Rootlesscontainers__Resource   *message,
                      uint8_t             *out);
size_t rootlesscontainers__resource__pack_to_buffer
                     (const Rootlesscontainers__Resource   *message,
                      ProtobufCBuffer     *buffer);
Rootlesscontainers__Resource *
       rootlesscontainers__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rootlesscontainers__resource__free_unpacked
                     (Rootlesscontainers__Resource *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Rootlesscontainers__Resource_Closure)
                 (const Rootlesscontainers__Resource *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rootlesscontainers__resource__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_rootlesscontainers_2eproto__INCLUDED */
